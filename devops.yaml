trigger:
  branches:
    include:
      - main   # Triggers pipeline on pushes to main branch

pool:
  vmImage: 'windows-latest'   # Use Windows agent for .NET builds

variables:
  buildConfiguration: 'Release'
  solution: '**/*.sln'
  outputDir: '$(Build.ArtifactStagingDirectory)/publish'

steps:
# Step 1: Install .NET SDK
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '7.0.x'
    installationPath: $(Agent.ToolsDirectory)/dotnet

# Step 2: Restore NuGet Packages
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'
    feedsToUse: 'select'

# Step 3: Build the Project
- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:Configuration=$(buildConfiguration)'
    platform: 'Any CPU'
    configuration: '$(buildConfiguration)'

# Step 4: Run Unit Tests (Optional)
- task: VSTest@2
  inputs:
    platform: 'Any CPU'
    configuration: '$(buildConfiguration)'

# Step 5: Publish Artifacts
- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration) --output $(outputDir)'
    publishWebProjects: true

- publish: '$(outputDir)'
  artifact: 'drop'

# Step 6: Deploy to Azure App Service
- task: AzureWebApp@1
  inputs:
    azureSubscription: '<Your-Azure-Service-Connection-Name>'
    appName: '<Your-App-Service-Name>'
    package: '$(Pipeline.Workspace)/drop'
